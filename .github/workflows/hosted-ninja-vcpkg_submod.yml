# Copyright (c) 2021, 2022 Luca Cappa
# Released under the term specified in file LICENSE.txt
# SPDX short identifier: MIT
#
# The peculiarity of this workflow is that assumes vcpkg stored as a submodule of this repository.
# The workflow runs on x86 and ARM.
# Workflow steps:
# - Restores vcpkg artifacts from cache, or setup vcpkg once and cache it on the GitHub cloud based cache.
# - Runs CMake with CMakePreset.json using a presest configuration
#   that leverages the vcpkg's toolchain file. This will automatically run vcpkg to install dependencies
#   described by the vcpkg.json manifest file. It will be a no-op if those are restored from cache.
# - Finally builds the sources with Ninja, and tests as well.
name: hosted-ninja-vcpkg_submod-autocache
on: 
  push: 
  workflow_dispatch:
  schedule:
  - cron: '0 1 * * FRI'

jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest, buildjet-2vcpu-ubuntu-2204-arm]

    # env:
    # [OPTIONAL] Define the vcpkg's triplet 
    # you want to enforce, otherwise the default one 
    # for the hosting system will be automatically
    # choosen (x64 is the default on all platforms, 
    # e.g. x64-osx).
    #   VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }} 

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: lukka/get-cmake@latest

      - name: Restore artifacts, or setup vcpkg for building artifacts
        uses: lukka/run-vcpkg@v10
        id: runvcpkg
        with:
          vcpkgJsonGlob: 'vcpkg.json'

      - name: Run CMake+vcpkg+Ninja+CTest to generate/build/test.
        uses: lukka/run-cmake@v10
        id: runcmake
        with:
          configurePreset: 'ninja-multiconfiguration-vcpkg'
          buildPreset: 'ninja-multiconfiguration-vcpkg'
          buildPresetAdditionalArgs: "[`--config`, `Release`]"
          testPreset: 'ninja-multiconfiguration-vcpkg'
          testPresetAdditionalArgs: "[`--config`, `Release`]"
        env:
          VCPKG_FORCE_SYSTEM_BINARIES: 1
